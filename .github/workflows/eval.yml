name: LightningRunner CI Stress Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-matrix:
    runs-on: ["self hosted","lightning-fast"]
    strategy:
      matrix:
        language: [python, node, go]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Python setup
      - name: Setup Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python Libraries
        if: matrix.language == 'python'
        run: |
          pip install --upgrade pip
          pip install numpy pandas pytest requests

      - name: Run Python Tests
        if: matrix.language == 'python'
        run: |
          python --version
          python -c "import numpy, pandas, requests; print('Python libs OK')"
          pytest || echo "pytest skipped (no tests)"

      # Node.js setup
      - name: Setup Node.js
        if: matrix.language == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node Libraries
        if: matrix.language == 'node'
        run: |
          npm install express lodash jest

      - name: Run Node.js Tests
        if: matrix.language == 'node'
        run: |
          node --version
          node -e "require('express'); require('lodash'); console.log('Node libs OK')"
          npx jest || echo "jest skipped (no tests)"

      # Go setup
      - name: Setup Go
        if: matrix.language == 'go'
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install Go Libraries
        if: matrix.language == 'go'
        run: |
          go mod init tempmod || true
          go get github.com/stretchr/testify
          go get github.com/sirupsen/logrus

      - name: Run Go Tests
        if: matrix.language == 'go'
        run: |
          go version
          go test ./... || echo "go test skipped (no tests)"

      # Artifact generation and upload
      - name: Generate and Upload Artifact
        run: |
          echo "Test artifact for ${{ matrix.language }}" > artifact-${{ matrix.language }}.txt

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.language }}-artifact
          path: artifact-${{ matrix.language }}.txt
