name: LightningRunner Robustness Test (v4)

on:
  push:
    branches: [main]
  pull_request:

jobs:
# ─────────── 1. High-concurrency stress ───────────
  high-concurrency:
    runs-on: ["self-hosted","lightning-fast"]
    strategy:
      fail-fast: false
      matrix:
        job_number: [1,2,3,4,5,6,7,8,9,10]
    steps:
      - name: Identify runner
        run: |
          echo "Job #${{ matrix.job_number }} on $(uname -a)"
      - name: Stagger start (fixed 2 s)
        run: |
          echo "Sleeping 2 seconds"
          sleep 2
      - name: Dummy build
        run: echo "Job #${{ matrix.job_number }} finished OK"

# ─────────── 2. Large logs + artifact upload ───────────
  large-artifacts-logs:
    runs-on: ["self-hosted","lightning-fast"]
    steps:
      - name: Generate 10 000-line log
        run: |
          for i in $(seq 1 10000); do
            printf "Log line %05d\n" "$i"
          done
      - name: Generate 100 MB artifact
        run: head -c 100M /dev/urandom > bigfile.bin
      - uses: actions/upload-artifact@v4
        with:
          name: bigfile
          path: bigfile.bin

# ─────────── 3. Long-running job (2 min) ───────────
  long-running:
    runs-on: ["self-hosted","lightning-fast"]
    steps:
      - run: |
          echo "Start 120-second task"; sleep 120; echo "Task done"

# ─────────── 4. Secrets handling ───────────
  secrets-handling:
    runs-on: ["self-hosted","lightning-fast"]
    env:
      SECRET_TOKEN: ${{ secrets.SECRET_TOKEN }}
    steps:
      - name: Write secret to file
        run: echo "$SECRET_TOKEN" > secretfile.txt
      - run: echo "Secret stored (not printed)."

# ─────────── 5. Intentional failure (continue) ───────────
  error-reporting:
    runs-on: ["self-hosted","lightning-fast"]
    continue-on-error: true
    steps:
      - run: |
          echo "Intentional failure test"
          exit 1

# ─────────── 6. Dependency-install stress ───────────
  dependency-stress:
    runs-on: ["self-hosted","lightning-fast"]
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: |
          pip install \
            numpy pandas scipy scikit-learn \
            requests flask fastapi pillow matplotlib pytest jupyter

# ─────────── 7. Artifact download & verify ───────────
  artifact-download:
    needs: large-artifacts-logs
    runs-on: ["self-hosted","lightning-fast"]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: bigfile
      - run: ls -lh bigfile.bin
